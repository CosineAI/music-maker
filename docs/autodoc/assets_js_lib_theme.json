{"type":"doc","content":[{"type":"heading","attrs":{"level":1},"content":[{"text":"Theme Selection & Mode Switching (","type":"text"},{"text":"assets/js/lib/theme.js","type":"text","marks":[{"type":"code"}]},{"text":")","type":"text"}]},{"type":"heading","attrs":{"level":2},"content":[{"text":"Overview","type":"text"}]},{"type":"paragraph","content":[{"text":"This region manages dynamic theme selection and mode switching for your app. It solves key problems:","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Gives users control over appearance (light/dark/custom themes) via UI controls.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Persists theme preference across sessions using ","type":"text"},{"text":"localStorage","type":"text","marks":[{"type":"code"}]},{"text":".","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Applies theme variants as CSS classes for easy design integration.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Supports accessibility by updating ARIA attributes.","type":"text"}]}]}]},{"type":"paragraph","content":[{"text":"Use cases include onboarding new users to theme controls, ensuring consistent look and feel, and supporting custom branding through CSS variants.","type":"text"}]},{"type":"horizontalRule"},{"type":"heading","attrs":{"level":2},"content":[{"text":"Quick-Start","type":"text"}]},{"type":"paragraph","content":[{"text":"To wire up theme selection and switching in your app:","type":"text"}]},{"type":"orderedList","attrs":{"type":"1","start":1},"content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Ensure your CSS defines theme classes: ","type":"text"},{"text":"dark","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"theme-outrunner","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"theme-vaporwave","type":"text","marks":[{"type":"code"}]},{"text":", etc. (see ","type":"text"},{"text":"assets/style.css","type":"text","marks":[{"type":"code"}]},{"text":").","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Add a theme toggle button and/or theme select dropdown in your UI (e.g., in ","type":"text"},{"text":"index.html","type":"text","marks":[{"type":"code"}]},{"text":").","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Import and call ","type":"text"},{"text":"setupTheme","type":"text","marks":[{"type":"code"}]},{"text":" from ","type":"text"},{"text":"assets/js/lib/theme.js","type":"text","marks":[{"type":"code"}]},{"text":" with references to your toggle/select elements. Optionally provide a callback to react to theme changes.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Use the returned helpers to control theme programmatically.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Reload the page to confirm theme persists and switches interactively.","type":"text"}]}]}]},{"type":"horizontalRule"},{"type":"heading","attrs":{"level":2},"content":[{"text":"Key Concepts / Responsibilities","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Theme Modes","type":"text","marks":[{"type":"bold"}]},{"text":": Supported modes are ","type":"text"},{"text":"\"light\"","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"\"dark\"","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"\"outrunner\"","type":"text","marks":[{"type":"code"}]},{"text":", and ","type":"text"},{"text":"\"vaporwave\"","type":"text","marks":[{"type":"code"}]},{"text":". These map to CSS classes on ","type":"text"},{"text":"document.body","type":"text","marks":[{"type":"code"}]},{"text":" as: ","type":"text"},{"text":"dark","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"theme-outrunner","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"theme-vaporwave","type":"text","marks":[{"type":"code"}]},{"text":". ","type":"text"},{"text":"Light mode applies no extra class.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Initialization","type":"text","marks":[{"type":"bold"}]},{"text":": Reads from ","type":"text"},{"text":"localStorage","type":"text","marks":[{"type":"code"}]},{"text":" (key ","type":"text"},{"text":"\"theme\"","type":"text","marks":[{"type":"code"}]},{"text":") or OS preference, sets the default theme, and updates UI controls. Initialization is handled internally when you call ","type":"text"},{"text":"setupTheme","type":"text","marks":[{"type":"code"}]},{"text":".","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"UI Controls","type":"text","marks":[{"type":"bold"}]},{"text":": ","type":"text"},{"text":"themeToggle","type":"text","marks":[{"type":"code"}]},{"text":" (button) switches between light/dark; ","type":"text"},{"text":"themeSelect","type":"text","marks":[{"type":"code"}]},{"text":" (dropdown) lets users pick from all variants.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Persistence","type":"text","marks":[{"type":"bold"}]},{"text":": Theme choice is saved in ","type":"text"},{"text":"localStorage","type":"text","marks":[{"type":"code"}]},{"text":" under the key ","type":"text"},{"text":"\"theme\"","type":"text","marks":[{"type":"code"}]},{"text":".","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Accessibility","type":"text","marks":[{"type":"bold"}]},{"text":": Toggle button's label and ARIA state are updated for screen readers.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Integration Point","type":"text","marks":[{"type":"bold"}]},{"text":": Call ","type":"text"},{"text":"setupTheme","type":"text","marks":[{"type":"code"}]},{"text":" with your UI controls. The callback argument is optional; if provided it is invoked with the new mode whenever the theme changes.","type":"text"}]}]}]},{"type":"paragraph","content":[{"text":"Example responsibilities and usage:","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Applying theme programmatically:","type":"text"}]}]}]},{"type":"codeBlock","attrs":{"language":null},"content":[{"text":"  const { applyTheme } = setupTheme(toggleBtn, selectEl);\n  applyTheme(\"vaporwave\");","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Accessing current mode:","type":"text"}]}]}]},{"type":"codeBlock","attrs":{"language":null},"content":[{"text":"  const { current } = setupTheme(toggleBtn, selectEl);\n  console.log(current);","type":"text"}]},{"type":"horizontalRule"},{"type":"heading","attrs":{"level":2},"content":[{"text":"Usage Examples","type":"text"}]},{"type":"paragraph","content":[{"text":"Basic Integration:","type":"text","marks":[{"type":"bold"}]}]},{"type":"codeBlock","attrs":{"language":null},"content":[{"text":"import { setupTheme } from 'assets/js/lib/theme.js';\n\nconst themeToggle = document.getElementById('theme-toggle');\nconst themeSelect = document.getElementById('theme-select');\n\nconst { current, applyTheme } = setupTheme(themeToggle, themeSelect, (mode) => {\n  console.log('Theme changed to:', mode);\n});\n\n// Optionally change theme in code\napplyTheme('outrunner');","type":"text"}]},{"type":"paragraph","content":[{"text":"HTML Controls Example:","type":"text","marks":[{"type":"bold"}]}]},{"type":"codeBlock","attrs":{"language":null},"content":[{"text":"<button id=\"theme-toggle\">Dark</button>\n<select id=\"theme-select\">\n  <option value=\"light\">Light</option>\n  <option value=\"dark\">Dark</option>\n  <option value=\"outrunner\">Outrunner</option>\n  <option value=\"vaporwave\">Vaporwave</option>\n</select>","type":"text"}]},{"type":"paragraph","content":[{"text":"Reacting to Theme Change:","type":"text","marks":[{"type":"bold"}]}]},{"type":"codeBlock","attrs":{"language":null},"content":[{"text":"setupTheme(toggle, select, (mode) => {\n  // E.g., send analytics, update other UI parts, etc.\n});","type":"text"}]},{"type":"horizontalRule"},{"type":"heading","attrs":{"level":2},"content":[{"text":"Dependencies & Interactions","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"CSS","type":"text","marks":[{"type":"bold"}]},{"text":": Theme classes (","type":"text"},{"text":"dark","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"theme-outrunner","type":"text","marks":[{"type":"code"}]},{"text":", ","type":"text"},{"text":"theme-vaporwave","type":"text","marks":[{"type":"code"}]},{"text":", etc.) must be styled in ","type":"text"},{"text":"assets/style.css","type":"text","marks":[{"type":"code"}]},{"text":".","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"UI Elements","type":"text","marks":[{"type":"bold"}]},{"text":": Expects references to a toggle button and a select dropdown.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Persistence","type":"text","marks":[{"type":"bold"}]},{"text":": Uses ","type":"text"},{"text":"localStorage","type":"text","marks":[{"type":"code"}]},{"text":" to save and restore theme.","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Other JS Modules","type":"text","marks":[{"type":"bold"}]},{"text":": Can be imported and used anywhere UI needs ","type":"text"},{"text":"theme control","type":"text","marks":[{"type":"link","attrs":{"rel":"noopener noreferrer nofollow","href":"../index.md","class":null,"target":"_blank"}}]},{"text":".","type":"text"}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Accessibility","type":"text","marks":[{"type":"bold"}]},{"text":": Updates ARIA attributes for screen readers.","type":"text"}]}]}]},{"type":"horizontalRule"},{"type":"heading","attrs":{"level":2},"content":[{"text":"Further Reading / Related Docs","type":"text"}]},{"type":"bulletList","content":[{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Theme logic: ","type":"text"},{"text":"assets/js/lib/theme.js","type":"text","marks":[{"type":"code"}]}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"CSS theme definitions: ","type":"text"},{"text":"assets/style.css","type":"text","marks":[{"type":"code"}]}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"Main entry point (possible integration): ","type":"text"},{"text":"assets/js/main.js","type":"text","marks":[{"type":"code"}]}]}]},{"type":"listItem","content":[{"type":"paragraph","content":[{"text":"UI markup: ","type":"text"},{"text":"index.html","type":"text","marks":[{"type":"code"}]}]}]}]}]}